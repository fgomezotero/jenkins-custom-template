apiVersion: v1
kind: Template
metadata:
  name: jenkins-custom-template
  annotations:
    description: Template de despliegue de un jenkins custom donde busca los plugins, credentials, etc desde un git 
    iconClass: icon-jenkins
    tags: custom, jenkins
    template.openshift.io/documentation-url: http://gitlab.paas.agesic.red.uy/franklin.gomez/jenkins-custom-template.git
    template.openshift.io/long-description: Template de despliegue de un jenkins custom donde busca los plugins, credentials, etc desde un git 
    template.openshift.io/provider-display-name: AGESIC
message:

parameters:
# Parámetros generales
  - name: APP_NAME
    description: Nombre de la APP que alberga todos los objetos declarados en el template
    value: jenkins-custom
    required: true
# Parámetros para el acceso al GIT
  - name: GIT_URL
    description: URL del Repositorio GIT donde Jenkins busca los plugins, credentials, los fichero para el Pipeline,etc...
    value: http://gitlab.paas.agesic.red.uy/franklin.gomez/jenkins-custom-template.git
    required: true
  - name: GIT_URL_USERNAME
    description: Nombre de usuario con permiso para acceder al GIT
    required: true
  - name: GIT_URL_PASSWORD
    description: Contraseña del usuario ingresado en el paso anterior
    required: true
  - name: GIT_RAMA
    description: Rama dentro del GIT donde jenkins va a buscar los plugins, credentials, pipeline files, etc...
    value: master
    required: true

objects:


# ##########################################################################################
# Custom Jenkins
# ##########################################################################################
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: jenkins-custom-template
      app: ${APP_NAME}
    name: custom-jenkins
    
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: jenkins-custom-template
      app: ${APP_NAME}
    name: custom-jenkins-build
  spec:
    source:
      type: Git
      git:
        uri: ${GIT_URL}
        ref: ${GIT_RAMA}
      contextDir: configuration/jenkins
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: jenkins:latest
          namespace: openshift
      type: Source
    output:
      to:
        kind: ImageStreamTag
        name: custom-jenkins:latest
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - jenkins
          from:
            kind: ImageStreamTag
            name: 'jenkins:latest'
      - type: ConfigChange
      
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: jenkins
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"jenkins\"}}"
      
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: jenkins
    labels:
      template: jenkins-custom-template
      app: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      name: jenkins
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
      type: Recreate
    template:
      metadata:
        labels:
          name: jenkins
      spec:
        containers:
          - name: jenkins
            env:
              - name: OPENSHIFT_ENABLE_OAUTH
                value: 'true'
              - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
                value: 'true'
              - name: DISABLE_ADMINISTRATIVE_MONITORS
                value: 'false'
              - name: KUBERNETES_MASTER
                value: 'https://kubernetes.default:443'
              - name: KUBERNETES_TRUST_CERTIFICATES
                value: 'true'
              - name: JENKINS_SERVICE_NAME
                value: jenkins
              - name: JNLP_SERVICE_NAME
                value: jenkins-jnlp
              - name: ENABLE_FATAL_ERROR_LOG_FILE
                value: 'true'
              - name: INSTALL_PLUGINS
                value: ''
              - name: JENKINS_PASSWORD
                from: '[a-zA-Z0-9]{8}'
                generate: expression
              - name: TZ
                value: America/Montevideo
            resources:
              requests:
                memory: 512Mi
                cpu: 200m
              limits:
                memory: 2Gi
                cpu: 1
            livenessProbe:
              httpGet:
                path: /login
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 420
              timeoutSeconds: 3
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 30
            readinessProbe:
              httpGet:
                path: /login
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 3
              timeoutSeconds: 3
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: IfNotPresent
            securityContext:
              capabilities: {}
              privileged: false
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        serviceAccountName: jenkins
        serviceAccount: jenkins
        securityContext: {}
    test: false
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - jenkins
          from:
            kind: ImageStreamTag
            name: 'custom-jenkins:latest'
      - type: ConfigChange
  status: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: 'true'
    labels:
      template: jenkins-custom-template
      app: ${APP_NAME}
    name: jenkins
  spec:
    ports:
      - name: web
        port: 80
        protocol: TCP
        targetPort: 8080
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      template: jenkins-custom-template
      app: ${APP_NAME}
    name: jenkins-jnlp
  spec:
    ports:
      - name: agent
        port: 50000
        protocol: TCP
        targetPort: 50000
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: 'true'
      template.openshift.io/expose-uri: 'http://{.spec.host}{.spec.path}'
    labels:
      template: jenkins-custom-template
      app: ${APP_NAME}
    name: jenkins
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
      - conditions:
          - lastTransitionTime: '2018-08-08T12:58:20Z'
            status: 'True'
            type: Admitted
        routerName: router
        wildcardPolicy: None
